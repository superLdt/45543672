================================================================================
📊 数据库管理器依赖关系分析报告
================================================================================
分析时间: analyze_dependencies.py
项目根目录: D:\智能运力系统\45543672_backup
总Python文件数: 32
有依赖的文件数: 9
依赖比例: 28.1%

🔍 详细依赖关系:
----------------------------------------

📁 文件: app.py
  📎 导入语句:
     第 15 行: from db_manager import DatabaseManager
     第 115 行: from db_manager import DatabaseManager
     第 375 行: from db_manager import DatabaseManager
  🔧 使用情况:
     第 15 行: from db_manager import DatabaseManager
     第 21 行: from api.company import set_db_manager as set_company_db_manager
     第 59 行: DatabaseManager.init_database()
     第 61 行: set_company_db_manager(DatabaseManager())
     第 86 行: db_manager = getattr(g, '_db_manager', None)
     第 87 行: if db_manager is None:
     第 88 行: db_manager = g._db_manager = DatabaseManager()
     第 89 行: if not db_manager.connect():
     第 92 行: if db_manager.conn is not None:
     第 93 行: db_manager.conn.row_factory = sqlite3.Row
     第 96 行: if db_manager.conn is None:
     第 98 行: return db_manager.conn
     第 102 行: db_manager = getattr(g, '_db_manager', None)
     第 103 行: if db_manager is not None:
     第 104 行: db_manager.disconnect()
     第 115 行: from db_manager import DatabaseManager
     第 119 行: db_manager = DatabaseManager()
     第 120 行: if not db_manager.connect():
     第 124 行: if db_manager.cursor is None:
     第 126 行: db_manager.disconnect()
     第 129 行: cursor = db_manager.cursor
     第 192 行: db_manager.disconnect()
     第 200 行: db_manager = DatabaseManager()
     第 201 行: if not db_manager.connect():
     第 204 行: if db_manager.cursor is None:
     第 207 行: cursor = db_manager.cursor
     第 216 行: db_manager.disconnect()
     第 227 行: db_manager = DatabaseManager()
     第 228 行: if not db_manager.connect():
     第 231 行: if db_manager.cursor is None:
     第 234 行: cursor = db_manager.cursor
     第 258 行: db_manager.disconnect()
     第 373 行: """统一的数据库初始化入口，使用DatabaseManager"""
     第 375 行: from db_manager import DatabaseManager
     第 376 行: db_manager = DatabaseManager()
     第 377 行: db_manager.create_tables()

📁 文件: api\audit.py
  📎 导入语句:
     第 8 行: from db_manager import DatabaseManager
  🔧 使用情况:
     第 8 行: from db_manager import DatabaseManager
     第 22 行: db_manager = DatabaseManager()
     第 23 行: if not db_manager.connect():
     第 31 行: db_manager.cursor.execute(
     第 35 行: task = db_manager.cursor.fetchone()
     第 67 行: db_manager.cursor.execute("""
     第 76 行: db_manager.cursor.execute("""
     第 81 行: db_manager.conn.commit()
     第 91 行: db_manager.disconnect()
     第 121 行: db_manager = DatabaseManager()
     第 122 行: if not db_manager.connect():
     第 130 行: db_manager.cursor.execute(
     第 134 行: task = db_manager.cursor.fetchone()
     第 169 行: db_manager.cursor.execute("""
     第 187 行: db_manager.cursor.execute("""
     第 192 行: db_manager.conn.commit()
     第 203 行: db_manager.disconnect()
     第 234 行: db_manager = DatabaseManager()
     第 235 行: if not db_manager.connect():
     第 243 行: db_manager.cursor.execute(
     第 247 行: task = db_manager.cursor.fetchone()
     第 272 行: db_manager.cursor.execute("""
     第 287 行: db_manager.cursor.execute("""
     第 292 行: db_manager.conn.commit()
     第 303 行: db_manager.disconnect()
     第 316 行: db_manager = DatabaseManager()
     第 317 行: if not db_manager.connect():
     第 325 行: db_manager.cursor.execute(
     第 329 行: if db_manager.cursor.fetchone()[0] == 0:
     第 336 行: db_manager.cursor.execute("""
     第 342 行: history = [dict(row) for row in db_manager.cursor.fetchall()]
     第 351 行: db_manager.disconnect()

📁 文件: api\company.py
  🔧 使用情况:
     第 6 行: global_db_manager = None
     第 8 行: def set_db_manager(db_manager):
     第 10 行: global global_db_manager
     第 11 行: global_db_manager = db_manager
     第 21 行: db_manager = global_db_manager
     第 22 行: if not db_manager or not db_manager.connect():
     第 25 行: cursor = db_manager.cursor
     第 36 行: db_manager.disconnect()
     第 46 行: db_manager = global_db_manager
     第 47 行: if not db_manager or not db_manager.connect():
     第 51 行: company_id = db_manager.get_company_id_by_name(company_name)
     第 53 行: db_manager.disconnect()

📁 文件: api\dispatch.py
  📎 导入语句:
     第 4 行: from db_manager import DatabaseManager
  🔧 使用情况:
     第 4 行: from db_manager import DatabaseManager
     第 76 行: db_manager = DatabaseManager()
     第 77 行: if not db_manager.connect():
     第 104 行: result = db_manager.create_dispatch_task(task_data)
     第 116 行: db_manager.disconnect()
     第 119 行: task_detail = db_manager.get_dispatch_task_detail(task_id)
     第 147 行: db_manager = DatabaseManager()
     第 148 行: if not db_manager.connect():
     第 181 行: db_manager.cursor.execute("SELECT company_id FROM User WHERE id = ?", [current_user_id])
     第 182 行: company_row = db_manager.cursor.fetchone()
     第 225 行: db_manager.cursor.execute(total_query)
     第 230 行: db_manager.cursor.execute(total_query, [current_user_id, company_id])
     第 233 行: db_manager.cursor.execute(total_query, [current_user_id])
     第 236 行: db_manager.cursor.execute(total_query)
     第 238 行: db_manager.cursor.execute(total_query, [current_user_id])
     第 239 行: total = db_manager.cursor.fetchone()[0]
     第 242 行: db_manager.cursor.execute(query, params)
     第 243 行: rows = db_manager.cursor.fetchall()
     第 249 行: for i, col in enumerate(db_manager.cursor.description):
     第 254 行: db_manager.disconnect()
     第 257 行: db_manager.disconnect()
     第 277 行: db_manager = DatabaseManager()
     第 278 行: if not db_manager.connect():
     第 285 行: db_manager.cursor.execute('SELECT * FROM manual_dispatch_tasks WHERE task_id = ?', (task_id,))
     第 286 行: task = db_manager.cursor.fetchone()
     第 295 行: columns = [description[0] for description in db_manager.cursor.description]
     第 299 行: db_manager.cursor.execute('''
     第 309 行: for row in db_manager.cursor.fetchall():
     第 320 行: db_manager.disconnect()
     第 362 行: db_manager = DatabaseManager()
     第 363 行: if not db_manager.connect():
     第 371 行: db_manager.cursor.execute('SELECT * FROM manual_dispatch_tasks WHERE task_id = ?', (task_id,))
     第 372 行: task = db_manager.cursor.fetchone()
     第 401 行: db_manager.cursor.execute(query, params)
     第 402 行: db_manager.conn.commit()
     第 405 行: db_manager.disconnect()
     第 420 行: db_manager = DatabaseManager()
     第 421 行: if not db_manager.connect():
     第 429 行: db_manager.cursor.execute('''
     第 434 行: task = db_manager.cursor.fetchone()
     第 449 行: db_manager.cursor.execute('''
     第 454 行: vehicle_count = db_manager.cursor.fetchone()['count']
     第 470 行: db_manager.cursor.execute('''
     第 473 行: user_result = db_manager.cursor.fetchone()
     第 481 行: db_manager.cursor.execute('''
     第 488 行: db_manager.cursor.execute('''
     第 493 行: db_manager.conn.commit()
     第 502 行: db_manager.disconnect()
     第 515 行: db_manager = DatabaseManager()
     第 516 行: if not db_manager.connect():
     第 546 行: db_manager.cursor.execute('''
     第 551 行: task = db_manager.cursor.fetchone()
     第 559 行: db_manager.cursor.execute('''
     第 564 行: vehicle_count = db_manager.cursor.fetchone()['count']
     第 580 行: db_manager.cursor.execute('''
     第 583 行: user_result = db_manager.cursor.fetchone()
     第 590 行: db_manager.cursor.execute('''
     第 597 行: db_manager.cursor.execute('''
     第 600 行: task_volume = db_manager.cursor.fetchone()
     第 605 行: db_manager.cursor.execute('''
     第 609 行: capacity_result = db_manager.cursor.fetchone()
     第 617 行: db_manager.cursor.execute('''
     第 638 行: db_manager.conn.rollback()  # 回滚事务
     第 653 行: db_manager.cursor.execute('''
     第 659 行: db_manager.conn.commit()
     第 673 行: db_manager.disconnect()
     第 679 行: db_manager.disconnect()
     第 701 行: db_manager = DatabaseManager()
     第 702 行: if not db_manager.connect():
     第 710 行: result = db_manager.get_vehicle_capacity_reference_paginated(
     第 723 行: db_manager.disconnect()
     第 753 行: db_manager = DatabaseManager()
     第 754 行: if not db_manager.connect():
     第 762 行: result = db_manager.upsert_vehicle_capacity_reference(
     第 780 行: db_manager.disconnect()
     第 794 行: db_manager = DatabaseManager()
     第 795 行: if not db_manager.connect():
     第 803 行: result = db_manager.delete_vehicle_capacity_reference(license_plate)
     第 816 行: db_manager.disconnect()
     第 830 行: db_manager = DatabaseManager()
     第 831 行: if not db_manager.connect():
     第 855 行: db_manager.cursor.execute("SELECT company_id FROM User WHERE id = ?", [current_user_id])
     第 856 行: company_row = db_manager.cursor.fetchone()
     第 871 行: db_manager.cursor.execute(query, params)
     第 872 行: total_tasks = db_manager.cursor.fetchone()[0]
     第 880 行: db_manager.cursor.execute(query, params + [status])
     第 883 行: db_manager.cursor.execute(query, [status])
     第 884 行: status_counts[status] = db_manager.cursor.fetchone()[0]
     第 890 行: db_manager.cursor.execute(query, params + [today.isoformat()])
     第 893 行: db_manager.cursor.execute(query, [today.isoformat()])
     第 894 行: today_new_tasks = db_manager.cursor.fetchone()[0]
     第 904 行: db_manager.cursor.execute(query, params + [tomorrow.isoformat()])
     第 911 行: db_manager.cursor.execute(query, [tomorrow.isoformat()])
     第 912 行: urgent_tasks = db_manager.cursor.fetchone()[0]
     第 919 行: db_manager.cursor.execute(query, params + [track])
     第 922 行: db_manager.cursor.execute(query, [track])
     第 923 行: track_counts[track] = db_manager.cursor.fetchone()[0]
     第 926 行: db_manager.disconnect()
     第 982 行: db_manager = DatabaseManager()
     第 984 行: if not db_manager.connect():
     第 1038 行: db_manager.cursor.execute(sql, params)
     第 1040 行: rows = db_manager.cursor.fetchall()
     第 1096 行: db_manager.cursor.execute(sql, [f'%{query}%', limit])
     第 1098 行: rows = db_manager.cursor.fetchall()
     第 1131 行: db_manager.disconnect()
     第 1240 行: db_manager = DatabaseManager()
     第 1241 行: if not db_manager.connect():
     第 1254 行: result = db_manager.upsert_vehicle_capacity_reference(
     第 1271 行: db_manager.conn.commit()
     第 1282 行: db_manager.conn.rollback()
     第 1285 行: db_manager.disconnect()

📁 文件: api\utils.py
  📎 导入语句:
     第 2 行: from db_manager import DatabaseManager
  🔧 使用情况:
     第 2 行: from db_manager import DatabaseManager
     第 55 行: db_manager = DatabaseManager()
     第 56 行: if not db_manager.connect():
     第 61 行: db_manager.cursor.execute("SELECT COUNT(*) FROM manual_dispatch_tasks WHERE task_id LIKE ?",
     第 63 行: count = db_manager.cursor.fetchone()[0]
     第 67 行: db_manager.disconnect()

📁 文件: modules\system\__init__.py
  📎 导入语句:
     第 4 行: from db_manager import DatabaseManager
  🔧 使用情况:
     第 4 行: from db_manager import DatabaseManager
     第 48 行: db_manager = DatabaseManager()
     第 50 行: conn = db_manager.connect()
     第 65 行: db_manager.disconnect()
     第 72 行: db_manager = DatabaseManager()
     第 74 行: conn = db_manager.connect()
     第 91 行: db_manager.disconnect()
     第 102 行: db_manager = DatabaseManager()
     第 104 行: conn = db_manager.connect()
     第 124 行: db_manager.disconnect()

📁 文件: scripts\analyze_dependencies.py
  📎 导入语句:
     第 100 行: 'from db_manager',
     第 101 行: 'import db_manager',
     第 102 行: 'from .db_manager',
     第 103 行: 'import .db_manager'
  🔧 使用情况:
     第 4 行: 用于分析项目中所有引用 db_manager.py 的文件
     第 68 行: if 'DatabaseManager' in line_stripped or 'db_manager' in line_stripped:
     第 100 行: 'from db_manager',
     第 101 行: 'import db_manager',
     第 102 行: 'from .db_manager',
     第 103 行: 'import .db_manager'
     第 117 行: if 'db_manager.py' in file_path or 'test_' in file_path or 'tests/' in file_path:
     第 178 行: report.append("✅ 未发现对 db_manager.py 的依赖")
     第 194 行: report.append("1. 创建兼容层（services/db_manager_compat.py）")
     第 199 行: report.append("✅ 无需重构，项目中没有对 db_manager.py 的依赖")
     第 230 行: 'id': 'db_manager.py',
     第 231 行: 'name': 'db_manager.py',
     第 249 行: 'source': 'db_manager.py',

📁 文件: services\database_service.py
  📎 导入语句:
     第 9 行: from db_manager import DatabaseManager
  🔧 使用情况:
     第 9 行: from db_manager import DatabaseManager
     第 20 行: if 'db_manager' not in g:
     第 21 行: g.db_manager = DatabaseManager()
     第 22 行: if not g.db_manager.connect():
     第 26 行: if g.db_manager.conn is not None:
     第 27 行: g.db_manager.conn.row_factory = sqlite3.Row
     第 31 行: return g.db_manager.conn
     第 36 行: db_manager = g.pop('db_manager', None)
     第 37 行: if db_manager is not None:
     第 38 行: db_manager.disconnect()
     第 42 行: def get_db_manager():
     第 44 行: db_manager = DatabaseManager()
     第 46 行: if not db_manager.connect():
     第 48 行: yield db_manager
     第 50 行: if db_manager.conn:
     第 51 行: db_manager.conn.rollback()
     第 55 行: db_manager.disconnect()

📁 文件: services\db_manager_compat.py
  🔧 使用情况:
     第 2 行: 数据库管理器兼容层 - 提供与旧版 db_manager.py 相同的接口
     第 18 行: class DatabaseManagerCompat:
     第 22 行: 提供与旧版 DatabaseManager 相同的接口，内部使用新的 services 架构
     第 161 行: with db_manager.transaction():
     第 163 行: db_manager.execute_update("INSERT INTO ...")
     第 170 行: def __init__(self, db_manager):
     第 171 行: self.db_manager = db_manager
     第 174 行: if self.db_manager.conn:
     第 175 行: self.db_manager.conn.execute('BEGIN TRANSACTION')
     第 176 行: return self.db_manager
     第 179 行: if self.db_manager.conn:
     第 181 行: self.db_manager.conn.commit()
     第 183 行: self.db_manager.conn.rollback()
     第 324 行: db_manager = DatabaseManagerCompat()
     第 325 行: if db_manager.connect():
     第 327 行: success = db_manager.create_tables()
     第 328 行: db_manager.disconnect()
     第 346 行: db_manager = DatabaseManagerCompat()
     第 353 行: manager = DatabaseManagerCompat()

================================================================================
🚀 重构建议
================================================================================
基于分析结果，建议按以下顺序进行重构：

1. 🟢 低风险文件（工具脚本、测试文件）
2. 🟡 中风险文件（业务模块、工具函数）
3. 🔴 高风险文件（核心应用、API接口）

具体重构步骤：
1. 创建兼容层（services/db_manager_compat.py）
2. 逐步替换导入语句
3. 测试功能完整性
4. 移除旧版依赖